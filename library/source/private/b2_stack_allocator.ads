--  #include "b2_api.h"
--  #include "b2_settings.h"
--
--  const int32 b2_stackSize = 100 * 1024;	// 100k
--  const int32 b2_maxStackEntries = 32;
--
--  struct B2_API b2StackEntry
--  {
--  	char* data;
--  	int32 size;
--  	bool usedMalloc;
--  };
--
--  // This is a stack allocator used for fast per step allocations.
--  // You must nest allocate/free pairs. The code will assert
--  // if you try to interleave multiple allocate/free pairs.
--  class B2_API b2StackAllocator
--  {
--  public:
--  	b2StackAllocator();
--  	~b2StackAllocator();
--
--  	void* Allocate(int32 size);
--  	void Free(void* p);
--
--  	int32 GetMaxAllocation() const;
--
--  private:
--
--  	char m_data[b2_stackSize];
--  	int32 m_index;
--
--  	int32 m_allocation;
--  	int32 m_maxAllocation;
--
--  	b2StackEntry m_entries[b2_maxStackEntries];
--  	int32 m_entryCount;
--  };
--
